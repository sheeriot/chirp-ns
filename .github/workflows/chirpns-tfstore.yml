name: Terraform Azure VM for RAN-Connect PoC

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy'
        type: environment
        required: true
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
          - 'init'
          - 'plan'
          - 'apply'
          - 'destroy'
      component:
        description: 'Component to Deploy'
        type: choice
        options:
          - 'tfstore'
          - 'network'
          - 'compute'
          - 'app'
          - 'all'

jobs:

  init-tfstate-store:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENV_NAME: ${{ github.event.inputs.environment }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      STATE_SUFFIX: ${{ vars.STATE_SUFFIX }}
      LOCATION: ${{ vars.LOCATION }}
      CIDR_BLOCK: ${{ vars.CIDR_BLOCK }}

    steps:

      - name: Echo environment variables
        run: |
          echo "ENV_NAME: ${ENV_NAME}"
          echo "ARM_TENANT_ID: $ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"
          echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
          echo "ARM_CLIENT_SECRET: $ARM_CLIENT_SECRET"
          echo "STATE_SUFFIX: ${STATE_SUFFIX}"
          echo "LOCATION: ${LOCATION}"
          echo "CIDR_BLOCK: $CIDR_BLOCK"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: terraform apply - init
        env:
          ARM_SKIP_PROVIDER_REGISTRATION: true
        run: |
          cd azure
          ./terraform_runner.sh azure init $action



