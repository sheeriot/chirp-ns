name: Terraform Azure VM for RAN-Connect PoC

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy'
        type: environment
        required: true



jobs:

  check-env:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENV_NAME: ${{ github.event.inputs.environment }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      LOCATION: ${{ secrets.LOCATION }}
      CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
    steps:
      - name: Echo environment variables
        run: |
          echo "ENV_NAME: $ENV_NAME"
          echo "ARM_TENANT_ID: $ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"
          echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
          echo "ARM_CLIENT_SECRET: $ARM_CLIENT_SECRET"
          echo "LOCATION: $LOCATION"
          echo "CIDR_BLOCK: $CIDR_BLOCK"
      - name: Az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: azure account list
        run: az account list --output table

  terraform-init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Terraform Init
        run: |
          pwd
          ls -la
          cd azure
          ls -la
          ./terraform_runner.sh init apply

  # terraform-init:
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Terraform Init
  #       run: |
  #         cd azure
  #         ./terraform_runner.sh init apply
